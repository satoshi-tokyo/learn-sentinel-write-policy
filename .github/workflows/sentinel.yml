name: HashiCorp Sentinel workflow for Terraform

on:
  push:
    branches:
      - dev

permissions:
  contents: write

jobs:
  policy-as-code:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: .
    steps:
      - name: Check-out source code
        uses: actions/checkout@v4
      # - name: Install Terraform CLI
      #   uses: hashicorp/setup-terraform@v3
      # - name: Install Sentinel CLI
      #   run: |
      #     FILENAME="sentinel_${{ env.SENTINEL_VERSION }}_linux_amd64.zip"
      #     wget "https://releases.hashicorp.com/sentinel/${{ env.SENTINEL_VERSION }}/$FILENAME"
      #     unzip "$FILENAME" -d $HOME/bin
      #     chmod +x $HOME/bin/sentinel
      #     echo "$HOME/bin" >> $GITHUB_PATH
      - name: Initialize Terraform configuration
        run: terraform init -backend-config=dev.tfbackend
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      - name: Run Terraform plan
        run: terraform plan -var-file=dev.tfvars -out tfplan
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      - name: Create JSON plan for Sentinel
        run: terraform show -json tfplan | jq > plan.json
      - name: Run Sentinel and store the result as JSON
        run: sentinel apply

  merge-branch:
    needs: policy-as-code
    runs-on: self-hosted
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Sync `staging`
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git push origin --force dev:staging
